{
  "swagger" : "2.0",
  "info" : {
    "description" : "Operations for Books.",
    "version" : "99",
    "title" : "Book API"
  },
  "host" : "localhost:8081",
  "basePath" : "/book-api/api",
  "tags" : [ {
    "name" : "authors",
    "description" : "Operations for authors."
  }, {
    "name" : "books",
    "description" : "Operations for books."
  }, {
    "name" : "categories",
    "description" : "Operations for categories."
  }, {
    "name" : "publishers",
    "description" : "Operations for publishers."
  } ],
  "schemes" : [ "http", "https" ],
  "paths" : {
    "/auth" : {
      "post" : {
        "operationId" : "token",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "parameters" : [ {
          "name" : "username",
          "in" : "formData",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "password",
          "in" : "formData",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/authors" : {
      "get" : {
        "tags" : [ "authors" ],
        "summary" : "Find all authors",
        "description" : "",
        "operationId" : "getAllAuthors",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "All authors found",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/AuthorDTO"
              }
            }
          },
          "404" : {
            "description" : "Authors not found"
          }
        }
      },
      "post" : {
        "tags" : [ "authors" ],
        "summary" : "Create an author",
        "description" : "",
        "operationId" : "createAuthor",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Author to be created",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AuthorDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AuthorDTO"
            }
          },
          "201" : {
            "description" : "The author is created"
          },
          "400" : {
            "description" : "Invalid input"
          },
          "415" : {
            "description" : "Format is not JSon"
          }
        }
      },
      "put" : {
        "tags" : [ "authors" ],
        "summary" : "Update an author",
        "description" : "",
        "operationId" : "updateAuthor",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Author to be updated",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AuthorDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The author is updated",
            "schema" : {
              "$ref" : "#/definitions/AuthorDTO"
            }
          },
          "400" : {
            "description" : "Invalid input"
          }
        }
      }
    },
    "/authors/{id}" : {
      "get" : {
        "tags" : [ "authors" ],
        "summary" : "Find an author by the Id.",
        "description" : "",
        "operationId" : "getAuthor",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "pattern" : "\\d+",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Author found",
            "schema" : {
              "$ref" : "#/definitions/AuthorDTO"
            }
          },
          "400" : {
            "description" : "Invalid input"
          },
          "404" : {
            "description" : "Author not found"
          }
        }
      },
      "delete" : {
        "tags" : [ "authors" ],
        "summary" : "Delete an author",
        "description" : "",
        "operationId" : "deleteAuthor",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "pattern" : "\\d+",
          "format" : "int64"
        } ],
        "responses" : {
          "204" : {
            "description" : "Author has been deleted"
          },
          "400" : {
            "description" : "Invalid input"
          }
        }
      }
    },
    "/books" : {
      "get" : {
        "tags" : [ "books" ],
        "summary" : "Find all Books",
        "description" : "",
        "operationId" : "findAll",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "All books found",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Book"
              }
            }
          },
          "404" : {
            "description" : "Books not found"
          }
        }
      },
      "post" : {
        "tags" : [ "books" ],
        "summary" : "Create a Book",
        "description" : "",
        "operationId" : "create",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Book to be created",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Book"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "The book is created"
          },
          "400" : {
            "description" : "Invalid input"
          },
          "415" : {
            "description" : "Format is not JSon"
          }
        }
      },
      "put" : {
        "tags" : [ "books" ],
        "summary" : "Update a Book",
        "description" : "",
        "operationId" : "updateBook",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Book to be updated",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/BookDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The book is updated",
            "schema" : {
              "$ref" : "#/definitions/BookDTO"
            }
          },
          "400" : {
            "description" : "Invalid input"
          }
        }
      }
    },
    "/books/health" : {
      "get" : {
        "tags" : [ "books" ],
        "summary" : "Checks the health of this REST endpoint",
        "description" : "",
        "operationId" : "health",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/books/number" : {
      "get" : {
        "tags" : [ "books" ],
        "summary" : "Wraps the Number API to retrive a Book Number",
        "description" : "",
        "operationId" : "number",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/books/search/{query}" : {
      "get" : {
        "tags" : [ "books" ],
        "summary" : "Search for books",
        "description" : "",
        "operationId" : "searchBooks",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "query",
          "in" : "path",
          "description" : "Query string",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "books found",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/BookDTO"
              }
            }
          },
          "404" : {
            "description" : "books not found"
          }
        }
      }
    },
    "/books/{id}" : {
      "get" : {
        "tags" : [ "books" ],
        "summary" : "Find a Book by the Id.",
        "description" : "",
        "operationId" : "findById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "pattern" : "\\d+",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Book found",
            "schema" : {
              "$ref" : "#/definitions/Book"
            }
          },
          "400" : {
            "description" : "Invalid input"
          },
          "404" : {
            "description" : "Book not found"
          }
        }
      },
      "put" : {
        "tags" : [ "books" ],
        "summary" : "Update a Book",
        "description" : "",
        "operationId" : "update",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "pattern" : "\\d+",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Book to be updated",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Book"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The book is updated",
            "schema" : {
              "$ref" : "#/definitions/Book"
            }
          },
          "400" : {
            "description" : "Invalid input"
          }
        }
      },
      "delete" : {
        "tags" : [ "books" ],
        "summary" : "Delete a Book",
        "description" : "",
        "operationId" : "delete",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "pattern" : "\\d+",
          "format" : "int64"
        } ],
        "responses" : {
          "204" : {
            "description" : "Book has been deleted"
          },
          "400" : {
            "description" : "Invalid input"
          }
        }
      }
    },
    "/categories" : {
      "get" : {
        "tags" : [ "categories" ],
        "summary" : "Find all authors",
        "description" : "",
        "operationId" : "getAllCategories",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "All categories found",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CategoryDTO"
              }
            }
          },
          "404" : {
            "description" : "Categories not found"
          }
        }
      },
      "post" : {
        "tags" : [ "categories" ],
        "summary" : "Create a category",
        "description" : "",
        "operationId" : "createCategory",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Category to be created",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CategoryDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CategoryDTO"
            }
          },
          "201" : {
            "description" : "The category is created"
          },
          "400" : {
            "description" : "Invalid input"
          },
          "415" : {
            "description" : "Format is not JSon"
          }
        }
      },
      "put" : {
        "tags" : [ "categories" ],
        "summary" : "Update a category",
        "description" : "",
        "operationId" : "updateCategory",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Category to be updated",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CategoryDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The category is updated",
            "schema" : {
              "$ref" : "#/definitions/CategoryDTO"
            }
          },
          "400" : {
            "description" : "Invalid input"
          }
        }
      }
    },
    "/categories/{id}" : {
      "get" : {
        "tags" : [ "categories" ],
        "summary" : "Find a category by the Id.",
        "description" : "",
        "operationId" : "getCategory",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "pattern" : "\\d+",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Category found",
            "schema" : {
              "$ref" : "#/definitions/CategoryDTO"
            }
          },
          "400" : {
            "description" : "Invalid input"
          },
          "404" : {
            "description" : "Category not found"
          }
        }
      },
      "delete" : {
        "tags" : [ "categories" ],
        "summary" : "Delete a category",
        "description" : "",
        "operationId" : "deleteCategory",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "pattern" : "\\d+",
          "format" : "int64"
        } ],
        "responses" : {
          "204" : {
            "description" : "Category has been deleted"
          },
          "400" : {
            "description" : "Invalid input"
          }
        }
      }
    },
    "/publishers" : {
      "get" : {
        "tags" : [ "publishers" ],
        "summary" : "Find all authors",
        "description" : "",
        "operationId" : "getAllPublishers",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "All publishers found",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/PublisherDTO"
              }
            }
          },
          "404" : {
            "description" : "Publishers not found"
          }
        }
      },
      "post" : {
        "tags" : [ "publishers" ],
        "summary" : "Create a publisher",
        "description" : "",
        "operationId" : "createPublisher",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Publisher to be created",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PublisherDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PublisherDTO"
            }
          },
          "201" : {
            "description" : "The publisher is created"
          },
          "400" : {
            "description" : "Invalid input"
          },
          "415" : {
            "description" : "Format is not JSon"
          }
        }
      },
      "put" : {
        "tags" : [ "publishers" ],
        "summary" : "Update a publisher",
        "description" : "",
        "operationId" : "updatePublisher",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Publisher to be updated",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PublisherDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The publisher is updated",
            "schema" : {
              "$ref" : "#/definitions/PublisherDTO"
            }
          },
          "400" : {
            "description" : "Invalid input"
          }
        }
      }
    },
    "/publishers/{id}" : {
      "get" : {
        "tags" : [ "publishers" ],
        "summary" : "Find a publisher by the Id.",
        "description" : "",
        "operationId" : "getPublisher",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "pattern" : "\\d+",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Publisher found",
            "schema" : {
              "$ref" : "#/definitions/PublisherDTO"
            }
          },
          "400" : {
            "description" : "Invalid input"
          },
          "404" : {
            "description" : "Publisher not found"
          }
        }
      },
      "delete" : {
        "tags" : [ "publishers" ],
        "summary" : "Delete a publisher",
        "description" : "",
        "operationId" : "deletePublisher",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "pattern" : "\\d+",
          "format" : "int64"
        } ],
        "responses" : {
          "204" : {
            "description" : "Publisher has been deleted"
          },
          "400" : {
            "description" : "Invalid input"
          }
        }
      }
    }
  },
  "definitions" : {
    "Author" : {
      "type" : "object",
      "required" : [ "firstName", "lastName" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "firstName" : {
          "type" : "string",
          "minLength" : 2,
          "maxLength" : 50
        },
        "lastName" : {
          "type" : "string",
          "minLength" : 2,
          "maxLength" : 50
        },
        "bio" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 5000
        },
        "dateOfBirth" : {
          "type" : "string",
          "format" : "date"
        },
        "preferredLanguage" : {
          "type" : "string",
          "enum" : [ "ENGLISH", "FRENCH", "SPANISH", "PORTUGUESE", "ITALIAN", "FINISH", "GERMAN", "DEUTSCH", "RUSSIAN" ]
        }
      }
    },
    "AuthorDTO" : {
      "type" : "object",
      "required" : [ "firstName", "lastName" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "firstName" : {
          "type" : "string",
          "minLength" : 2,
          "maxLength" : 50
        },
        "lastName" : {
          "type" : "string",
          "minLength" : 2,
          "maxLength" : 50
        },
        "bio" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 5000
        },
        "dateOfBirth" : {
          "type" : "string",
          "format" : "date"
        },
        "preferredLanguage" : {
          "type" : "string",
          "enum" : [ "ENGLISH", "FRENCH", "SPANISH", "PORTUGUESE", "ITALIAN", "FINISH", "GERMAN", "DEUTSCH", "RUSSIAN" ]
        },
        "bookId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "bookTitle" : {
          "type" : "string"
        }
      }
    },
    "Book" : {
      "type" : "object",
      "required" : [ "isbn", "title" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "isbn" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 15
        },
        "title" : {
          "type" : "string",
          "minLength" : 2,
          "maxLength" : 200
        },
        "description" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 10000
        },
        "price" : {
          "type" : "number",
          "minimum" : 1,
          "exclusiveMinimum" : false
        },
        "nbOfPages" : {
          "type" : "integer",
          "format" : "int32",
          "minimum" : 1
        },
        "publication" : {
          "type" : "string",
          "format" : "date"
        },
        "language" : {
          "type" : "string",
          "enum" : [ "ENGLISH", "FRENCH", "SPANISH", "PORTUGUESE", "ITALIAN", "FINISH", "GERMAN", "DEUTSCH", "RUSSIAN" ]
        },
        "smallImageURL" : {
          "type" : "string"
        },
        "mediumImageURL" : {
          "type" : "string"
        },
        "authors" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/Author"
          }
        },
        "publisher" : {
          "$ref" : "#/definitions/Publisher"
        },
        "category" : {
          "$ref" : "#/definitions/Category"
        }
      }
    },
    "BookDTO" : {
      "type" : "object",
      "required" : [ "isbn", "title" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "isbn" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 15
        },
        "title" : {
          "type" : "string",
          "minLength" : 2,
          "maxLength" : 200
        },
        "description" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 10000
        },
        "price" : {
          "type" : "number",
          "minimum" : 1,
          "exclusiveMinimum" : false
        },
        "nbOfPages" : {
          "type" : "integer",
          "format" : "int32",
          "minimum" : 1
        },
        "publication" : {
          "type" : "string",
          "format" : "date"
        },
        "language" : {
          "type" : "string",
          "enum" : [ "ENGLISH", "FRENCH", "SPANISH", "PORTUGUESE", "ITALIAN", "FINISH", "GERMAN", "DEUTSCH", "RUSSIAN" ]
        },
        "smallImageURL" : {
          "type" : "string"
        },
        "mediumImageURL" : {
          "type" : "string"
        },
        "publisherId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "publisherName" : {
          "type" : "string"
        },
        "categoryId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "categoryName" : {
          "type" : "string"
        }
      }
    },
    "Category" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string",
          "minLength" : 2,
          "maxLength" : 100
        }
      }
    },
    "CategoryDTO" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string",
          "minLength" : 2,
          "maxLength" : 100
        }
      }
    },
    "Publisher" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string",
          "minLength" : 2,
          "maxLength" : 30
        }
      }
    },
    "PublisherDTO" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string",
          "minLength" : 2,
          "maxLength" : 30
        }
      }
    }
  }
}